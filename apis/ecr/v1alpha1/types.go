/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1
import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

)

type EncryptionConfiguration struct {
	EncryptionType *string `json:"encryptionType,omitempty"`
	KMSKey *string `json:"kmsKey,omitempty"`
}

type Image struct {
	RegistryID *string `json:"registryID,omitempty"`
	RepositoryName *string `json:"repositoryName,omitempty"`
}

type ImageDetail struct {
	RegistryID *string `json:"registryID,omitempty"`
	RepositoryName *string `json:"repositoryName,omitempty"`
}

type ImageScanFinding struct {
	URI *string `json:"uri,omitempty"`
}

type ImageScanningConfiguration struct {
	ScanOnPush *bool `json:"scanOnPush,omitempty"`
}

type Repository_SDK struct {
	CreatedAt *metav1.Time `json:"createdAt,omitempty"`
	EncryptionConfiguration *EncryptionConfiguration `json:"encryptionConfiguration,omitempty"`
	ImageScanningConfiguration *ImageScanningConfiguration `json:"imageScanningConfiguration,omitempty"`
	ImageTagMutability *string `json:"imageTagMutability,omitempty"`
	RegistryID *string `json:"registryID,omitempty"`
	RepositoryARN *string `json:"repositoryARN,omitempty"`
	RepositoryName *string `json:"repositoryName,omitempty"`
	RepositoryURI *string `json:"repositoryURI,omitempty"`
}

type Tag struct {
	Key *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}